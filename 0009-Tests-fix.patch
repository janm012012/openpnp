From e10107d7125db8160e4626d5a5836576b5bb1baa Mon Sep 17 00:00:00 2001
From: karlinik <karlikova.nikola@gmail.com>
Date: Thu, 16 Sep 2021 22:37:32 +0200
Subject: [PATCH 09/11] Tests fix

---
 src/main/java/org/openpnp/model/Configuration.java        | 4 ++++
 src/main/java/org/openpnp/model/Part.java                 | 2 ++
 src/main/java/org/openpnp/model/Pipeline.java             | 7 +++++--
 src/main/java/org/openpnp/vision/pipeline/CvPipeline.java | 4 ++--
 4 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/src/main/java/org/openpnp/model/Configuration.java b/src/main/java/org/openpnp/model/Configuration.java
index 1353a73983..ec1b04d39f 100644
--- a/src/main/java/org/openpnp/model/Configuration.java
+++ b/src/main/java/org/openpnp/model/Configuration.java
@@ -516,6 +516,10 @@ public class Configuration extends AbstractModelObject {
     }
 
     public Pipeline getPipeline(String pipelineId) {
+        if (pipelineId == null) {
+            return null;
+        }
+
         return pipelines.get(pipelineId);
     }
 
diff --git a/src/main/java/org/openpnp/model/Part.java b/src/main/java/org/openpnp/model/Part.java
index 2b672a6767..2060f79b44 100644
--- a/src/main/java/org/openpnp/model/Part.java
+++ b/src/main/java/org/openpnp/model/Part.java
@@ -29,6 +29,8 @@ import org.simpleframework.xml.core.Persist;
  * from one or more Feeders and is placed at a Placement as part of a Job. Parts can be used across
  * many boards and should generally represent a single part in the real world.
  */
+
+//TODO: NK constructor to initialize cvpipeline
 public class Part extends AbstractModelObject implements Identifiable {
     @Attribute
     private String id;
diff --git a/src/main/java/org/openpnp/model/Pipeline.java b/src/main/java/org/openpnp/model/Pipeline.java
index 2331f8f06a..d1cdd5f9c2 100644
--- a/src/main/java/org/openpnp/model/Pipeline.java
+++ b/src/main/java/org/openpnp/model/Pipeline.java
@@ -24,7 +24,10 @@ public class Pipeline extends AbstractModelObject implements Identifiable {
     }
 
     public CvPipeline getCvPipeline() {
-        //TODO: NK check if really initialize, should not be ever null
+        if(cvPipeline == null) {
+            cvPipeline = new CvPipeline();
+        }
+
         return cvPipeline;
     }
 
@@ -32,5 +35,5 @@ public class Pipeline extends AbstractModelObject implements Identifiable {
         this.cvPipeline = cvPipeline;
     }
 
-    //TODO: contructor for creation of a new pipeline
+    //TODO: NK contructor for creation of a new pipeline
 }
diff --git a/src/main/java/org/openpnp/vision/pipeline/CvPipeline.java b/src/main/java/org/openpnp/vision/pipeline/CvPipeline.java
index 517f9845f0..f0fa955e9a 100644
--- a/src/main/java/org/openpnp/vision/pipeline/CvPipeline.java
+++ b/src/main/java/org/openpnp/vision/pipeline/CvPipeline.java
@@ -53,9 +53,9 @@ public class CvPipeline implements AutoCloseable {
     @ElementList
     private ArrayList<CvStage> stages = new ArrayList<>();
 
-    private Map<CvStage, Result> results = new HashMap<CvStage, Result>();
+    private Map<CvStage, Result> results = new HashMap<>();
     
-    private Map<String, Object> properties = new HashMap<String, Object>();
+    private Map<String, Object> properties = new HashMap<>();
 
     private Mat workingImage;
     private Object workingModel;
-- 
2.28.0.windows.1

